{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation Sample Template for Lambda and SNS",
    "Parameters": {
        "LambdaRole": {
            "Description": "Lambda Role",
            "Type": "String"
        },
        "LambdaFunctionName": {
            "Description": "Lambda function name",
            "Type": "String"
        },
        "LambdaBucket": {
            "Description": "Lambda bucket",
            "Type": "String"
        },
        "SSHLocation": {
            "Description": "The IP address range that can be used to ssh/ https to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "s3Object": {
            "Description": "Object in Lambda bucket",
            "Type": "String"
        },
        "Mail": {
            "Description": "Mail Address",
            "Type": "String"
        },
        "TableName": {
            "Description": "Name of the DynamoDB Table",
            "Type": "String"
        }
    },
    "Resources": {
        "SNStopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "TopicName": "Sampletopic",
                "Subscription": [
                    {
                        "Endpoint": {
                            "Fn::GetAtt": [
                                "LambdaFunction",
                                "Arn"
                            ]
                        },
                        "Protocol": "lambda"
                    }
                ]
            }
        },
        "LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "LambdaBucket"
                    },
                    "S3Key": {
                        "Ref": "s3Object"
                    }
                },
                "Timeout": "25",
                "MemorySize": "256",
                "Description": "lambda function to be triggered when an sns topic is created",
                "Environment": {
                    "Variables": {
                        "From_Addr": {
                            "Ref": "Mail"
                        },
                        "Func_Name": "handleRequest",
                        "TTL":"20",
                        "Table_Name": {
                            "Ref": "TableName"
                        }
                    }
                },
                "FunctionName": {
                    "Ref": "LambdaFunctionName"
                },
                "Handler": "example.forgotpassword::handleRequest",
                "Role": {
                    "Ref": "LambdaRole"
                },
                "Runtime": "java8"
            }
        },
        "LambdaResourcePolicy": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Ref": "LambdaFunctionName"
                },
                "Principal": "sns.amazonaws.com",
                "Action": "lambda:InvokeFunction",
                "SourceArn": {
                    "Ref": "SNStopic"
                }
            }
        }
    }
}
